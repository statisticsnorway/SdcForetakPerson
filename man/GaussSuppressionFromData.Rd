% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GaussSuppressionFromData.R
\name{GaussSuppressionFromData}
\alias{GaussSuppressionFromData}
\title{Cell suppression from input data containing inner cells}
\usage{
GaussSuppressionFromData(
  data,
  dimVar = NULL,
  freqVar = NULL,
  numVar = NULL,
  weightVar = NULL,
  charVar = NULL,
  hierarchies = NULL,
  formula = NULL,
  maxN = 3,
  protectZeros = TRUE,
  secondaryZeros = FALSE,
  candidates = CandidatesDefault,
  primary = PrimaryDefault,
  forced = NULL,
  hidden = NULL,
  singleton = SingletonDefault,
  singletonMethod = "anySum",
  printInc = TRUE,
  output = "data.frame",
  x = NULL,
  crossTable = NULL,
  preAggregate = FALSE,
  ...
)
}
\arguments{
\item{data}{Input data as a data frame}

\item{dimVar}{The main dimensional variables and additional aggregating variables. This parameter can be  useful when hierarchies and formula are unspecified.}

\item{freqVar}{A single variable holding counts (name or number).}

\item{numVar}{Other numerical variables to be aggregated}

\item{weightVar}{weightVar Weights (costs) to be used to order candidates for secondary suppression}

\item{charVar}{Other variables possibly to be used within the supplied functions}

\item{hierarchies}{List of hierarchies, which can be converted by \code{\link{AutoHierarchies}}.
Thus, the variables can also be coded by \code{"rowFactor"} or \code{""}, which correspond to using the categories in the data.}

\item{formula}{A model formula}

\item{maxN}{Suppression parameter. Default: Cells having counts \verb{<= maxN} are set as primary suppressed.}

\item{protectZeros}{Suppression parameter. Default when TRUE: Empty cells (count=0) are set as primary suppressed.}

\item{secondaryZeros}{Suppression parameter.}

\item{candidates}{GaussSuppression input or a function generating it (see details) Default: \code{\link{CandidatesDefault}}}

\item{primary}{GaussSuppression input or a function generating it (see details) Default: \code{\link{PrimaryDefault}}}

\item{forced}{GaussSuppression input or a function generating it (see details)}

\item{hidden}{GaussSuppression input or a function generating it (see details)}

\item{singleton}{GaussSuppression input or a function generating it (see details) Default: \code{\link{SingletonDefault}}}

\item{singletonMethod}{\code{\link{GaussSuppression}} input}

\item{printInc}{\code{\link{GaussSuppression}} input}

\item{output}{If not "data.frame" (default), input to supplied functions are returned}

\item{x}{\code{x} (\code{modelMatrix}) and \code{crossTable} can be supplied as input instead of generating it from  \code{\link{ModelMatrix}}}

\item{crossTable}{See above.}

\item{preAggregate}{When \code{TRUE}, the data will be aggregated within the function to an appropriate level.
This is defined by the dimensional variables according to \code{dimVar}, \code{hierarchies} or \code{formula} and in addition \code{charVar}.}

\item{...}{Further arguments to be passed to the supplied functions.}
}
\value{
Aggregated data with suppression information
}
\description{
Aggregates are generated followed by
primary suppression followed by
secondary suppression by Gaussian elimination by \code{\link{GaussSuppression}}
}
\details{
The supplied functions for generating \code{\link{GaussSuppression}} input takes the following arguments:
\code{crossTable},  \code{x}, \code{freq}, \code{num}, \code{weight}, \code{maxN}, \code{protectZeros}, \code{secondaryZeros}, \code{data}, \code{freqVar}, \code{numVar}, \code{weightVar}, \code{charVar} and \code{...}.
where the two first are  \code{\link{ModelMatrix}} outputs (\code{modelMatrix} renamed to \code{x}).
The vector, \code{freq}, is aggregated counts (\code{t(x) \%*\% data[[freqVar]]}).
Similarly, \code{num}, is a data frame of aggregated numerical variables.
}
\examples{

\dontrun{
z1 <- SmallCountRounding::SmallCountData("z1")
GaussSuppressionFromData(z1, 1:2, 3)

z2 <- SmallCountRounding::SmallCountData("z2")
GaussSuppressionFromData(z2, 1:4, 5, protectZeros = FALSE)
}

# Data as in GaussSuppression examples
df <- data.frame(values = c(1, 1, 1, 5, 5, 9, 9, 9, 9, 9, 0, 0, 0, 7, 7), 
                 var1 = rep(1:3, each = 5), var2 = c("A", "B", "C", "D", "E"))

GaussSuppressionFromData(df, c("var1", "var2"), "values")
GaussSuppressionFromData(df, c("var1", "var2"), "values", formula = ~var1 + var2, maxN = 10)
GaussSuppressionFromData(df, c("var1", "var2"), "values", formula = ~var1 + var2, maxN = 10, 
      primary = function(freq, crossTable, maxN, ...) 
                   which(freq <= maxN & crossTable[[2]] != "A" & crossTable[, 2] != "C"))
                   
# Similar to GaussSuppression examples
GaussSuppressionFromData(df, c("var1", "var2"), "values", formula = ~var1 * var2, 
       candidates = NULL, singleton = NULL, protectZeros = FALSE, secondaryZeros = TRUE)
GaussSuppressionFromData(df, c("var1", "var2"), "values", formula = ~var1 * var2, 
       singleton = NULL, protectZeros = FALSE, secondaryZeros = FALSE)
GaussSuppressionFromData(df, c("var1", "var2"), "values", formula = ~var1 * var2, 
       protectZeros = FALSE, secondaryZeros = FALSE)
}
